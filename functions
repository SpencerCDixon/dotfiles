# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.

function tre() {
        tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

# `v` with no arguments opens the current directory in Vim, otherwise opens the
# given location

function v() {
        if [ $# -eq 0 ]; then
                vim .;
        else
                vim "$@";
        fi;
}

function g {
  if [[ $# > 0 ]]; then
    git "$@"
  else
    echo "Last commit: $(time_since_last_commit) ago"
    git status --short --branch
  fi
}

# Create a new directory and enter it
function mkd() {
        mkdir -p "$@" && cd "$_";
}

# Convert .mov files into gifs
mov2gif() {
  ffmpeg -i "$1" -r 10 -f image2pipe -vcodec ppm - |\
  convert -delay 5 -layers Optimize -loop 0 - "$2"
}

man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
            man "$@"
}

show_icons() {
  defaults write com.apple.finder CreateDesktop true
  killall Finder
}

hide_icons() {
  defaults write com.apple.finder CreateDesktop false
  killall Finder
}

# Returns whether the given command is executable or aliased.
_has() {
  return $( whence $1 >/dev/null )
}
